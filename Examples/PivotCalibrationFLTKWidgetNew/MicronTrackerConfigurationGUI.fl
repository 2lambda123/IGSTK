# data file for the Fltk User Interface Designer (fluid)
version 1.0107 
header_name {.h} 
code_name {.cxx}
decl {\#include <FL/Fl_File_Chooser.H>} {} 

class MicronTrackerConfigurationGUI {open : {public igstk::TrackerConfigurationGUIBase}
} {
  Function {MicronTrackerConfigurationGUI()} {open
  } {
    Fl_Window TrackerConfigurationWindow {
      label {Mcron Tracker Configuration} open
      xywh {437 558 418 221} type Double
      code0 {\#include "igstkTrackerConfigurationGUIBase.h"} visible
    } {
      Fl_Button {} {
        label Confirm
        callback {GetGUISetting();
RequestGetConfiguration();
TrackerConfigurationWindow->hide();}
        xywh {320 180 70 25}
      }
      Fl_Output CalibrationFileDir {
        label {Calibration File Dir:}
        xywh {145 20 215 25}
      }
      Fl_Button {} {
        label {...}
        callback {char * fileDir = fl_dir_chooser("SROM file for tracker tool","");
if( fileDir )
{
  CalibrationFileDir->value(fileDir);
}}
        xywh {365 19 25 25}
      }
      Fl_Output InitializationFile {
        label {Initialization File Dir:}
        xywh {145 60 215 25}
      }
      Fl_Button {} {
        label {...}
        callback {char * fileName = fl_file_chooser("SROM file for tracker tool","*.*","");
if( fileName )
{
  InitializationFile->value(fileName);
}}
        xywh {365 59 25 25}
      }
      Fl_Button {} {
        label {...}
        callback {char * fileDir = fl_dir_chooser("SROM file for tracker tool","");
if( fileDir )
{
  TemplateFileDir->value(fileDir);
  TrackerToolMarker->clear();
  itksys::Directory * dir = new itksys::Directory;
  if( dir->Load(fileDir) )
    {
    int n = dir->GetNumberOfFiles();
    for( int i=0; i<n; i++ )
      {
      std::string s = dir->GetPath();
      s += dir->GetFile(i);
      if(itksys::SystemTools::FileIsDirectory(s.c_str()))
        {
        continue;
        }
      TrackerToolMarker->add(dir->GetFile(i));
      }
    TrackerToolMarker->value(0);
    }
}} selected
        xywh {365 98 25 25}
      }
      Fl_Output TemplateFileDir {
        label {Template File Dir:}
        xywh {145 100 215 25}
      }
      Fl_Choice TrackerToolMarker {
        label {Tracker Tool Marker:}
        xywh {145 135 215 25} down_box BORDER_BOX
      } {}
    }
    code {TrackerConfigurationWindow->show();} {}
  }
  Function {~MicronTrackerConfigurationGUI()} {open return_type virtual
  } {}
  Function {InitializeGUI()} {open return_type {virtual void}
  } {}
  Function {GetGUISetting()} {open return_type {virtual void}
  } {
    code {igstk::MicronTrackerConfiguration * conf = new igstk::MicronTrackerConfiguration;

conf->m_Frequency = 30;
conf->m_CameraCalibrationFileDirectory = CalibrationFileDir->value();
conf->m_InitializationFile = InitializationFile->value();
conf->m_TemplatesDirectory = TemplateFileDir->value();
    
conf->m_TrackerToolList.clear();
 
// Wired or Wireless tool, port & SROMs
igstk::MicronTrackerToolConfiguration * tool = new igstk::MicronTrackerToolConfiguration;
tool->m_MarkerName = TrackerToolMarker->text();
tool->m_IsReference = 0; 

conf->m_TrackerToolList.push_back( tool );

m_TrackerConfiguration.SetTrackerType( igstk::TrackerConfigurationNew::Micron);
m_TrackerConfiguration.SetMicronTrackerConfiguration( conf );} {}
  }
} 
