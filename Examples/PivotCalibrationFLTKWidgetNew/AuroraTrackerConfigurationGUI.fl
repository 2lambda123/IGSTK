# data file for the Fltk User Interface Designer (fluid)
version 1.0106 
header_name {.h} 
code_name {.cxx}
decl {\#include <FL/Fl_File_Chooser.H>} {} 

class AuroraTrackerConfigurationGUI {open selected : {public igstk::TrackerConfigurationGUIBase}
} {
  Function {AuroraTrackerConfigurationGUI()} {open
  } {
    Fl_Window TrackerConfigurationWindow {
      label {Aurora Tracker Configuration} open
      xywh {276 265 418 234} type Double
      code0 {\#include "igstkTrackerConfigurationGUIBase.h"} visible
    } {
      Fl_Choice SerialPort {
        label {Serial Port Number: } open
        xywh {213 13 75 25} down_box BORDER_BOX
      } {
        menuitem {} {
          label COM1
          xywh {0 0 100 20}
        }
        menuitem {} {
          label COM2
          xywh {10 10 100 20}
        }
        menuitem {} {
          label COM3
          xywh {20 20 100 20}
        }
        menuitem {} {
          label COM4
          xywh {30 30 100 20}
        }
        menuitem {} {
          label COM5
          xywh {40 40 100 20}
        }
        menuitem {} {
          label COM6
          xywh {50 50 100 20}
        }
        menuitem {} {
          label COM7
          xywh {60 60 100 20}
        }
        menuitem {} {
          label COM8
          xywh {70 70 100 20}
        }
      }
      Fl_Group TrackerToolGroup {
        label {Tracker Tool} open
        xywh {29 65 356 98} box ENGRAVED_BOX
      } {
        Fl_Output TrackerToolSROMFile {
          label {SROM File:}
          xywh {115 119 230 25}
        }
        Fl_Button {} {
          label {...}
          callback {char * fileName = fl_file_chooser("SROM file for tracker tool","*.rom","");
if( fileName )
{
  TrackerToolSROMFile->value(fileName);
}}
          xywh {350 119 25 25}
        }
        Fl_Choice TrackerToolPort {
          label {Port:} open
          xywh {225 85 45 25} down_box BORDER_BOX
        } {
          menuitem {} {
            label 1
            xywh {0 0 100 20}
          }
          menuitem {} {
            label 2
            xywh {10 10 100 20}
          }
          menuitem {} {
            label 3
            xywh {20 20 100 20}
          }
          menuitem {} {
            label 4
            xywh {30 30 100 20}
          }
        }
        Fl_Group {} {open
          xywh {31 74 170 35}
        } {
          Fl_Round_Button Is6DOFTrackerTool {
            label 6DOF
            callback {TrackerToolChannel->deactivate();}
            xywh {37 89 64 15} type Radio down_box ROUND_DOWN_BOX
          }
          Fl_Round_Button {} {
            label 5DOF
            callback {TrackerToolChannel->activate();}
            xywh {103 89 85 15} type Radio down_box ROUND_DOWN_BOX value 1
          }
        }
        Fl_Choice TrackerToolChannel {
          label {Channel:} open
          xywh {335 85 45 25} down_box BORDER_BOX
        } {
          menuitem {} {
            label 0
            xywh {0 0 100 20}
          }
          menuitem {} {
            label 1
            xywh {10 10 100 20}
          }
        }
      }
      Fl_Button {} {
        label Confirm
        callback {GetGUISetting();
RequestGetConfiguration();
TrackerConfigurationWindow->hide();}
        xywh {315 190 70 25}
      }
    }
    code {TrackerConfigurationWindow->show();} {}
  }
  Function {~AuroraTrackerConfigurationGUI()} {open return_type virtual
  } {}
  Function {GetGUISetting()} {open return_type {virtual void}
  } {
    code {igstk::NDITrackerConfiguration * conf = new igstk::NDITrackerConfiguration;

//Serial Port
switch( SerialPort->value() ) 
  {
  case 0 : 
    conf->m_COMPort = igstk::SerialCommunication::PortNumber0;
    break;
  case 1 : 
    conf->m_COMPort = igstk::SerialCommunication::PortNumber1;
    break;
  case 2 : 
    conf->m_COMPort = igstk::SerialCommunication::PortNumber2;      
    break;
  case 3 : 
    conf->m_COMPort = igstk::SerialCommunication::PortNumber3;
    break;
  case 4 : 
    conf->m_COMPort = igstk::SerialCommunication::PortNumber4;
    break;
  case 5 : 
    conf->m_COMPort = igstk::SerialCommunication::PortNumber5;
    break;
  case 6 : 
    conf->m_COMPort = igstk::SerialCommunication::PortNumber6;
    break;
  case 7 : 
    conf->m_COMPort = igstk::SerialCommunication::PortNumber7;
    break;
  default:
    conf->m_COMPort = igstk::SerialCommunication::PortNumber0;
  }
  
 conf->m_Frequency = 30;
    
 conf->m_TrackerToolList.clear();
 
 // Wired or Wireless tool, port & SROMs
 igstk::NDITrackerToolConfiguration * tool = new igstk::NDITrackerToolConfiguration;
 
 if( Is6DOFTrackerTool->value() )
   {
   tool->m_Is5DOF   = 0;
   tool->m_PortNumber = TrackerToolPort->value();
   }
 else
   {
   tool->m_Is5DOF = 1;
   tool->m_PortNumber = TrackerToolPort->value();
   tool->m_ChannelNumber = TrackerToolChannel->value();
   }
   
if(itksys::SystemTools::FileExists(TrackerToolSROMFile->value()))
  {
  tool->m_HasSROM = 1;
  tool->m_SROMFile = TrackerToolSROMFile->value();
  }

tool->m_IsReference = 0;
  
conf->m_TrackerToolList.push_back( tool );

m_TrackerConfiguration.SetTrackerType( igstk::TrackerConfigurationNew::Aurora );
m_TrackerConfiguration.SetNDITrackerConfiguration( conf );} {}
  }
} 
