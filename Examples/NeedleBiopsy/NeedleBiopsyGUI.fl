# data file for the Fltk User Interface Designer (fluid)
version 1.0106 
header_name {.h} 
code_name {.cxx}
decl {\#include <FL/fl_ask.H>} {} 

decl {\#include <FL/Fl_File_Chooser.H>} {} 

class NeedleBiopsyGUI {open
} {
  Function {NeedleBiopsyGUI()} {open
  } {
    Fl_Window mainWindow {
      label {IGSTK: Needle Biopsy Demo Application}
      callback {Quit();}
      xywh {263 108 930 732} type Double box PLASTIC_UP_BOX resizable
      code0 {\#include "igstkView2D.h"}
      code1 {\#include "igstkView3D.h"} visible
    } {
      Fl_Group ControlGroup {
        xywh {0 0 165 690} box DOWN_BOX
      } {
        Fl_Light_Button TrackingButton {
          label Tracking
          callback {if(o->value())
{
  RequestStartTracking();
}
else
{
    RequestStopTracking();
}}
          xywh {15 605 130 25} box PLASTIC_UP_FRAME labelsize 11
        }
        Fl_Light_Button LoadImageButton {
          label {Load Image}
          callback {RequestLoadImage();}
          xywh {15 65 130 25} box PLASTIC_UP_FRAME labelsize 11
        }
        Fl_Light_Button SetPatientNameButton {
          label {Register Patient}
          callback {RequestSetPatientName();}
          xywh {15 20 130 25} box PLASTIC_UP_FRAME labelsize 11
        }
        Fl_Light_Button InitializeTrackerButton {
          label {Initialize Tracker}
          callback {RequestInitializeTracker();}
          xywh {15 249 130 25} box PLASTIC_UP_FRAME labelsize 11
        }
        Fl_Light_Button QuitButton {
          label Quit
          callback {Quit();}
          xywh {15 645 130 25} type Normal box PLASTIC_UP_FRAME labelsize 11
        }
        Fl_Group {} {
          label {Path Planning} open
          xywh {10 485 140 100} box EMBOSSED_FRAME labelsize 11 align 17
        } {
          Fl_Light_Button {} {
            label {Target Point}
            callback {RequestSetTargetPoint();}
            xywh {15 510 130 25} box PLASTIC_UP_FRAME labelsize 11 labelcolor 1
          }
          Fl_Light_Button {} {
            label {Entry Point}
            callback {RequestSetEntryPoint();}
            xywh {15 548 130 25} box PLASTIC_UP_FRAME labelsize 11 labelcolor 4
          }
        }
        Fl_Group {} {open
          xywh {10 291 140 80} box EMBOSSED_FRAME
        } {
          Fl_Light_Button AddTrackerLandmarkButton {
            label {Add Tracker Landmark}
            callback {RequestAddTrackerLandmark();}
            xywh {15 299 130 25} box PLASTIC_UP_FRAME labelsize 11
          }
          Fl_Value_Output NumberOfTrackerLandmarks {
            label {No.}
            xywh {40 336 32 25} box DOWN_BOX labelsize 11 maximum 100 step 1 textfont 1
          }
          Fl_Button ClearTrackerLandmarks {
            label Clear
            callback {RequestClearTrackerLandmarks();}
            xywh {96 336 50 25} box PLASTIC_UP_FRAME labelsize 11
          }
        }
        Fl_Group {} {open
          xywh {10 108 140 80} box EMBOSSED_FRAME
        } {
          Fl_Light_Button AddImageLandmarkButton {
            label {Add Image Landmark}
            callback {RequestAddImageLandmark();}
            xywh {15 115 130 25} box PLASTIC_UP_FRAME labelsize 11
          }
          Fl_Value_Output NumberOfImageLandmarks {
            label {No.}
            xywh {41 152 32 25} box DOWN_BOX labelsize 11 maximum 100 step 1 textfont 1 textcolor 0
          }
          Fl_Button ClearImageLandmarks {
            label Clear
            callback {RequestClearImageLandmarks();}
            xywh {95 154 50 25} box PLASTIC_UP_FRAME labelsize 11
          }
        }
        Fl_Group {} {open
          xywh {10 389 140 80} box EMBOSSED_FRAME labelsize 11
        } {
          Fl_Light_Button RegistrationButton {
            label {Landmark Registration}
            callback {RequestRegistration();}
            xywh {15 399 130 25} box PLASTIC_UP_FRAME labelsize 11
          }
          Fl_Value_Output RegistrationError {
            label {Error:}
            xywh {55 434 45 25} box DOWN_BOX labelsize 11 maximum 1000 step 0.001 textfont 1
          }
        }
        Fl_Light_Button TrackerSetupButton {
          label {Tracker Setup}
          callback {TrackerConfigWindow->show();}
          xywh {15 208 130 25} box PLASTIC_UP_FRAME labelsize 11
        }
      }
      Fl_Group ViewerGroup {
        xywh {165 0 768 692} box DOWN_BOX
      } {
        Fl_Box DisplayAxial {
          label {Display Axial}
          xywh {165 0 380 330} box FLAT_BOX color 0 labelcolor 7
          class {igstk::View2D}
        }
        Fl_Box DisplaySagittal {
          label {Display Sagittal}
          xywh {550 0 380 330} box FLAT_BOX color 0 labelcolor 7
          class {igstk::View2D}
        }
        Fl_Box Display3D {
          label {Display 3D}
          xywh {550 345 380 330} box FLAT_BOX color 0 labelcolor 7
          class {igstk::View3D}
        }
        Fl_Box DisplayCoronal {
          label {Display Coronal}
          xywh {165 345 380 330} box FLAT_BOX color 0 labelcolor 7
          class {igstk::View2D}
        }
        Fl_Value_Slider AxialSlider {
          callback {this->RequestResliceImage();}
          xywh {165 330 378 15} type {Horz Knob} box DOWN_FRAME maximum 3 step 1 deactivate
        }
        Fl_Value_Slider SagittalSlider {
          callback {this->RequestResliceImage();}
          xywh {550 330 380 15} type {Horz Knob} box DOWN_FRAME maximum 3 step 1 deactivate
        }
        Fl_Value_Slider CoronalSlider {
          callback {this->RequestResliceImage();}
          xywh {165 676 380 15} type {Horz Knob} box DOWN_FRAME maximum 3 step 1 deactivate
        }
      }
      Fl_Text_Display m_LogWindow {
        xywh {0 690 930 60} box DOWN_BOX
      }
    }
    Fl_Window TrackerConfigWindow {
      label {Tracker Configuration}
      xywh {483 227 416 456} type Double hide
    } {
      Fl_Choice SerialPort {
        label {Serial Port Number: } open
        xywh {230 13 45 25} down_box BORDER_BOX
      } {}
      Fl_Group ReferenceGroup {open
        xywh {35 305 350 100} box ENGRAVED_BOX
      } {
        Fl_Output ReferenceToolSROMFile {
          label {SROM File:}
          xywh {115 370 230 25}
        }
        Fl_Button {} {
          label {...}
          callback {char * fileName = fl_file_chooser("SROM file for tracker tool","*.*","");
if( ! fileName == NULL )
{
  ReferenceToolSROMFile->value(fileName);
}}
          xywh {350 370 25 25}
        }
        Fl_Choice ReferenceToolPort {
          label {Reference Tool Port:}
          xywh {300 330 45 25} down_box BORDER_BOX
        } {}
      }
      Fl_Round_Button UseReferenceTool {
        label {Use Reference Tool ?}
        callback {if( UseReferenceTool->value() )
{
  ReferenceGroup->activate();
}
else
{
  ReferenceGroup->deactivate();
}}
        xywh {35 275 25 25} down_box ROUND_DOWN_BOX value 1
      }
      Fl_Group {} {open
        xywh {30 51 355 194} box ENGRAVED_BOX
      } {
        Fl_Output TrackerToolSROMFile {
          label {SROM File:}
          xywh {115 116 230 25}
        }
        Fl_Button {} {
          label {...}
          callback {char * fileName = fl_file_chooser("SROM file for tracker tool","*.*","");
if( ! fileName == NULL )
{
  TrackerToolSROMFile->value(fileName);
}}
          xywh {350 116 25 25}
        }
        Fl_Choice TrackerToolPort {
          label {Tracker Tool Port:} open
          xywh {300 80 45 25} down_box BORDER_BOX
        } {}
        Fl_Group {} {
          label {Tool Tip Offset} open
          xywh {30 175 355 70} box ENGRAVED_BOX
        } {
          Fl_Value_Input OffsetX {
            label {X:}
            xywh {70 205 55 25}
          }
          Fl_Value_Input OffsetY {
            label {Y:}
            xywh {190 205 55 25}
          }
          Fl_Value_Input OffsetZ {
            label {Z:}
            xywh {315 205 55 25}
          }
        }
      }
      Fl_Button {} {
        label Confirm
        callback {TrackerConfigWindow->hide();}
        xywh {315 420 70 25}
      }
    }
    code {mainWindow->show();
hasQuitted = false;

//Initialize tracker configuration window
SerialPort->clear();
TrackerToolPort->clear();
ReferenceToolPort->clear();

char buf[8];
for( int i = 0; i < 4; i++ )
{
  sprintf( buf, "%d", i );
  SerialPort->add( buf );
}

for( int i = 0; i < 6; i++ )
{
  sprintf( buf, "%d", i );
  TrackerToolPort->add( buf );
  ReferenceToolPort->add( buf );
}

SerialPort->value(2);
TrackerToolPort->value(3);
ReferenceToolPort->value(4);


OffsetX->value( -18.0 );
OffsetY->value( 0.5 );
OffsetZ->value( -157.5 );} {selected
    }
  }
  Function {~NeedleBiopsyGUI()} {return_type virtual
  } {
    code {delete DisplayAxial;
delete DisplayCoronal;
delete DisplaySagittal;
delete Display3D;} {}
  }
  Function {RequestSetPatientName()} {open return_type {virtual void}
  } {}
  Function {RequestLoadImage()} {open return_type {virtual void}
  } {}
  Function {RequestInitializeTracker()} {open return_type {virtual void}
  } {}
  Function {RequestAddImageLandmark()} {open return_type {virtual void}
  } {}
  Function {RequestAddTrackerLandmark()} {open return_type {virtual void}
  } {}
  Function {RequestClearImageLandmarks()} {open return_type {virtual void}
  } {}
  Function {RequestClearTrackerLandmarks()} {open return_type {virtual void}
  } {}
  Function {RequestRegistration()} {open return_type {virtual void}
  } {}
  Function {RequestStartTracking()} {open return_type {virtual void}
  } {}
  Function {RequestStopTracking()} {open return_type {virtual void}
  } {}
  Function {RequestResliceImage()} {return_type {virtual void}
  } {}
  Function {RequestReset()} {open return_type {virtual void}
  } {}
  Function {RequestSetTargetPoint()} {open return_type {virtual void}
  } {}
  Function {RequestSetEntryPoint()} {open return_type {virtual void}
  } {}
  decl {bool hasQuitted;} {}
  Function {Quit()} {return_type void
  } {
    code {int i = fl_choice("Are you sure you want to quit?", NULL,"Yes","No"); 
if ( i == 1 )
  {
  mainWindow->hide();
  this->hasQuitted = true;
  }
else
  {
  return;
  }} {}
  }
  Function {HasQuitted()} {return_type bool
  } {
    code {return this->hasQuitted;} {}
  }
} 
